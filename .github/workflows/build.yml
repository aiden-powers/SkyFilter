name: combined-build
on: [pull_request, push]

jobs:
  build:
    strategy:
      matrix:
        java: [21]
    runs-on: ubuntu-22.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: run changesettings.py
        run: python changesettings.py

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build

      - name: capture build artifacts
        if: ${{ matrix.java == '21' }}
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/

      - name: find jar file
        id: find_jar
        run: |
          JAR_FILE=$(find build/libs -name "skyfilter-*.jar" ! -name "*sources*.jar")
          JAR_BASENAME=$(basename "$JAR_FILE" .jar)
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV
          echo "JAR_BASENAME=$JAR_BASENAME" >> $GITHUB_ENV

      - name: read minecraft_version
        id: read_minecraft_version
        run: |
          minecraft_version=$(grep 'minecraft_version=' gradle.properties | cut -d'=' -f2)
          echo "MINECRAFT_VERSION=$minecraft_version" >> $GITHUB_ENV

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          pythonLocation: /opt/hostedtoolcache/Python/3.12.4/x64
          PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.4/x64/lib/pkgconfig
          Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.4/x64
          Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.4/x64
          Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.4/x64
          LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.4/x64/lib
          JAVA_HOME: /opt/hostedtoolcache/Java_Microsoft_jdk/21.0.2/x64
          JAVA_HOME_21_X64: /opt/hostedtoolcache/Java_Microsoft_jdk/21.0.2/x64
          JAR_FILE: ${{ env.JAR_FILE }}
        with:
          tag_name: ${{ env.MINECRAFT_VERSION }}-v${{ github.run_number }}
          release_name: ${{ env.JAR_BASENAME }}
          draft: false
          prerelease: false

      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.JAR_FILE }}
          asset_name: ${{ env.JAR_BASENAME }}.jar
          asset_content_type: application/java-archive